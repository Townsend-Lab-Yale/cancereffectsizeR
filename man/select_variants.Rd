% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_variants.R
\name{select_variants}
\alias{select_variants}
\title{Select and filter variants}
\usage{
select_variants(
  cesa,
  genes = NULL,
  min_freq = 0,
  variant_ids = NULL,
  gr = NULL,
  variant_position_table = NULL,
  include_subvariants = F,
  padding = 0
)
}
\arguments{
\item{cesa}{CESAnalysis with MAF data loaded and annotated (e.g., with \code{load_maf()})}

\item{genes}{Filter variants to specified genes.}

\item{min_freq}{Filter out variants with MAF frequency below threshold (default 0).
Note that variants that are not in the annotation tables will never be returned. Use
\code{add_variants()} to include variants absent from MAF data in your CESAnalysis.}

\item{variant_ids}{Vector of variant IDs to include in output regardless of
filtering options. You can use CES-style AAC and SBS IDs or variant names like 
"KRAS G12C". If this argument is used by itself (without any filtering arguments),
then only these specified variants will be returned.}

\item{gr}{Filter out any variants not within input GRanges +/- \code{padding} bases.}

\item{variant_position_table}{Filter out any variants that don't intersect the
positions given in chr/start/end of this table (1-based closed coordinates).
Typically, the table comes from a previous \code{select_variants} call and can be expanded
with \code{padding}. (Gritty detail: Amino acid substitutions get special handling. Only the
precise positions in start, end, and center_nt_pos are used. Otherwise, coding changes that
span splice sites would capture all the intronic sites.)}

\item{include_subvariants}{Some mutations "contain" other mutations. For example, in
cancereffectsizeR's ces.refset.hg19, the amino acid substitution KRAS_Q61H can be induced by
two distinct SBS: 12:25227341_T>G and 12:25227341_T>A. When include_subvariants = F (the
default), and genes = "KRAS", output will be returned for KRAS_Q61H but not for the two SBS.
Set to true, and all three variants will be included in output, assuming they don't get
filtered out by other other options, like min_freq. If you set this to TRUE, you can't directly
plug the output table into selection functions. However, you can pick a non-overlapping set of
variant IDs from the output table and re-run \code{select_variants()} to put those variants
into a new table for selection functions.}

\item{padding}{add +/- this many bases to every range specified in \code{gr} or
\code{variant_position_table} (stopping at chromosome ends, naturally).}
}
\value{
A data.table with info on selected variants (see details)
}
\description{
This function helps you find and view variant data from your CESAnalysis's MAF data and
mutation annotation tables. By default, almost all amino-acid-change mutations and
noncoding SBS are returned. You can apply a series of filters to restrict output to
certain genes or genomic regions or require a minimum variant frequency in MAF data.
You can also specify some variants to include in output regardless of filters with
\code{variant_ids}. Special behavior: If \code{variant_ids} is used by
itself, then only those specified variants will be returned.
}
\details{
Only variants that are present in the CESAnalysis's annotation tables can be returned,
which by default are those present in the MAF data. To select variants absent from MAF
data, you must first call add_variants() to add them to the CESAnalysis. Note that
while intergenic SBS have their nearest genes annotated in the SBS tables, these
variants will not be captured by gene-based selection with this function, since they're
not actually in any gene.

Definitions of some less self-explanatory columns:
\itemize{
  \item variant_name: short, often but not necessarily uniquely identifying name (use
  variant_id to guarantee uniqueness) 
  \item start/end: lowest/highest genomic positions overlapping variant
  \item variant_id: unique IDs for variants given the associated genome assembly version and the transcript data
  \item ref/alt: genomic reference and alternate alleles (for genomic
  variants; NA for AACs) 
  \item gene: the affected gene in AACs; for SBS, the
  overlapping gene (or an arbitrary gene if more than one overlaps), or the nearest gene
  for intergenic SBS
  \item strand: for AACs, 1 if the reference sequence strand is the coding strand; -1 otherwise
  \item essential_splice: Variant is 1,2 bp upstream or
  1,2,5 bp downstream of an annotated splice position (edge case: if an SBS has
  multiple gene/transcript annotations, this doesn't say which one it's essential for)
  \item intergenic: variant does not overlap any coding regions in the reference data
  \item trinuc_mut: for SBS, the reference trinucleotide context, in deconstructSigs notation
  \item coding_seq: coding strand nucleotides in order of transcription
  \item center_nt_pos: regardless of strand, start/end give positions of two out of three AAC nucleotides; this
                      gives the position of the center nucleotide (maybe useful if the AAC spans a splice site)
  \item multi_anno_site: T/F whether variant has multiple gene/transcript/AAC annotations
  \item maf_prevalence: number of occurrences of the variant in MAF data
  \item samples_covering: number of MAF samples with sequencing coverage at the variant site
}
}
