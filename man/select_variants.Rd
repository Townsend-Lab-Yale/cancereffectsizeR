% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variant_handling.R
\name{select_variants}
\alias{select_variants}
\title{Select and filter variants}
\usage{
select_variants(
  cesa,
  genes = NULL,
  variant_ids = NULL,
  granges = NULL,
  variant_position_table = NULL,
  min_freq = 0,
  include_subvariants = F,
  padding = 0,
  ids_only = F,
  collapse_lists = F
)
}
\arguments{
\item{cesa}{CESAnalysis with MAF data loaded and annotated (e.g., with \code{load_maf()})}

\item{genes}{Include variants (coding and noncoding) within these genes.}

\item{variant_ids}{Include variants by ID: vectors of snv_id and/or aac_id, or short
(potentially non-unique) names like KRAS_G12C (or "KRAS G12C").}

\item{granges}{Filter out any variants not within input GRanges.}

\item{variant_position_table}{Filter out any variants that don't intersect the
positions given in chr/start/end of this table (1-based closed coordinates).
Typically, the table comes from a previous `select_variants` call and can be expanded
with `padding`. (Gritty detail: Amino acid change SNVS get special handling: only the
precise positions in start, end, and center_nt_pos are used. This avoids intersecting
extra variants between start/end, which on splite-site-spanning variants can be many
thousands.)}

\item{min_freq}{Filter out variants with MAF frequency below threshold (default 0).
Note that variants that are not in the annotation tables will never be returned. Use
\code{add_variants()} to annotate variants absent from the data.}

\item{include_subvariants}{Some mutations "contain" other mutations. For example, in
cancereffectsizeR's default hg19 reference data, KRAS_Q61H contains two constituent
SNVs that both cause the same amino acid change: 12:25380275_T>G and 12:25380275_T>A.
When include_subvariants = F (the default), and genes = "KRAS", output will be
returned for KRAS_Q61H but not for the two SNVs (although their IDs will appear in
the Q61H output). Set to true, and all three variants will be included in output, 
assuming they don't get filtered out by other other options, like min_freq.}

\item{padding}{add +/- this many bases to every range specified in `granges` or
`variant_position_table` (stopping at chromsome ends, naturally).}

\item{ids_only}{instead of outputting a table of variant information, return a list of
selected variant IDs organized by variant type, without any annotations}

\item{collapse_lists}{Some output columns may have multiple elements per variant row.
For example, all_genes may include multiple genes. These variable-length vectors
allow advanced filter and manipulation, but the syntax can be tricky. Optionally, set
collapse_lists = T to convert these columns to comma-delimited strings, which are
sometimes easier to work with.}
}
\value{
A data table with info on selected variants (see details), or a list of IDs.
}
\description{
This function helps you find and view variant data from your CESAnalysis's MAF data and
mutation annotation tables. This function has a variant gathering step followed by a
filtering step. For gathering, you can specify genes by name or supply CES-style
variant IDs to get all variants matching either. Or, leave both empty and all available
variants will be gathered. For filtering, use the granges or variant_table parameters to
filter out variants that don't positionally intersect an input GRanges object or a
table previously generated using this function. Use min_freq to filter out variants by
frequency in the MAF data.
}
\details{
Note that while intergenic SNVs have their nearest genes annotated in the SNV tables,
these variants will not be captured by gene-based selection with this function, since
they're not actually in any gene.

Definitions of some less self-explanatory columns:
\itemize{
  \item variant_name: short, often but not necessarily uniquely identifying name (use
  variant_id to guarantee uniqueness) 
  \item start/end: lowest/highest genomic positions overlapping variant
  \item variant_id: unique IDs for variants given the associated genome assembly version and the transcript data
  \item ref/alt: genomic reference and alternate alleles (for genomic
  variants; NA for AACs) 
  \item gene: the affected gene in AACs; for SNVs, the
  overlapping gene (or an abitrary gene if more than one overlaps), or the nearest gene
  for intergenic SNVs
  \item strand: for AACs, 1 if the reference sequence strand is the coding strand; -1 otherwise
  \item essential_splice: Variant is 1,2 bp upstream or
  1,2,5 bp downstream of an annotated splice position (edge case: if an SNV has
  multiple gene/transcript annotations, this doesn't say which one it's essential for)
  \item intergenic: variant does not overlap any gene ranges in the reference data
  \item trinuc_mut: for SNVs, the reference trinucleotide context, in deconstructSigs notation
  \item coding_seq: coding strand nucleotides in order of transcription
  \item center_nt_pos: regardless of strand, start/end give positions of two out of three AAC nucleotides; this
                      gives the position of the center nucleotide (maybe useful if the AAC spans a splice site)
  \item constituent_snvs: all SNVs that can produce a given variant 
  \item multi_anno_site: T/F whether variant has multiple gene/transcript/AAC annotations
  \item all_aac: For SNVs, all AACs that the variant is annotated as producing; for
  AACs, all of the AACs that are annotated for all of the constituent SNVs
  \item all_genes: all genes overlapping the variant in reference data
  \item covered_in: the names of all "covered regions" sets in the CESAnalysis that have coverage at the variant site
  \item maf_freq: number of occurrences of the variant in MAF data
}
}
